package HarGenerator.PerformanceFrameWork.GenerateHar;

import java.lang.reflect.Proxy;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;

import HarGenerator.PerformanceFrameWork.Resources.GetUserValues;
import HarGenerator.PerformanceFrameWork.Resources.ResourcePaths;

public class HarGeneration {
	
	public static void GenerateHar() {
		
		 // start the proxy
	    BrowserMobProxy proxy = new BrowserMobProxyServer();
	    proxy.start(0);

	    // get the Selenium proxy object
	    Proxy seleniumProxy = ClientUtil.createSeleniumProxy(proxy);

	    // configure it as a desired capability
	    DesiredCapabilities capabilities = new DesiredCapabilities();
	    capabilities.setCapability(CapabilityType.PROXY, seleniumProxy);
		
		System.setProperty(ResourcePaths.driverType,ResourcePaths.driverLocation);
		WebDriver driver = new InternetExplorerDriver(); /*new ChromeDriver()*/; 
		System.out.println("Hello");
		try {
			driver.get(GetUserValues.properties("urlTobeRedirected"));
		} catch (Exception e) {	}
	}

}
